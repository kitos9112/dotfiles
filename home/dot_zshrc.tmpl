# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

DISABLE_AUTO_UPDATE="true"
DISABLE_UPDATE_PROMPT="true"
ENABLE_CORRECTION="false"
COMPLETION_WAITING_DOTS="true"
ZSH_CUSTOM=$HOME/.oh-my-zsh-custom

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  {{- if or (lookPath "1password") }}
	1password
	{{- end }}
	{{- if or (lookPath "asdf") }}
	asdf
	{{- end }}
	{{- if or (lookPath "aws") }}
	aws
	{{- end }}
	{{- if or (lookPath "brew") }}
	brew
	{{- end }}
	{{- if or (lookPath "chezmoi") }}
	chezmoi
	{{- end }}
	{{- if or (lookPath "direnv") }}
	direnv
	{{- end }}
	{{- if or (lookPath "docker") }}
	docker
	{{- end }}
	{{- if or (lookPath "docker-compose") }}
	docker-compose
	{{- end }}
	{{- if or (lookPath "fzf") }}
	fzf
	{{- end }}
	{{- if or (lookPath "gh") }}
	gh
	{{- end }}
	{{- if or (lookPath "git") }}
	git
	{{- end }}
	{{- if or (lookPath "go") }}
	golang
	{{- end }}
	{{- if or (lookPath "helm") }}
	helm
	{{- end }}
	{{- if or (lookPath "flux") }}
	flux
	{{- end }}
	{{- if or (lookPath "kubectl") }}
	kubectl
	{{- end }}
	{{- if or (lookPath "kustomize") }}
	kustomize
	{{- end }}
	{{- if or (lookPath "pip") }}
	pip
	{{- end }}
	{{ if (eq .osid "linux-ubuntu") }}
	ubuntu
	{{- end }}
	ansible
	aliases
	alias-finder
	history
	zsh-syntax-highlighting
)

fpath+=${ZSH_CUSTOM}/plugins/zsh-completions/src

source $ZSH/oh-my-zsh.sh

autoload -Uz compinit
compinit -u

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# Source FZF history shell plugin
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Source FZF history shell plugin
[[ -f ~/.zshenv ]] && source ~/.zshenv

# Add extra ZSH env variables or complenv.etions available in ~/.env.zsh
if [ -f "$HOME/.env.zsh" ]; then
    source $HOME/.env.zsh
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('{{ .chezmoi.homeDir }}/{{ if (eq .chezmoi.os "darwin") }}opt/anaconda3{{ else }}miniconda3{{ end }}/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{ .chezmoi.homeDir }}/{{ if (eq .chezmoi.os "darwin") }}opt/anaconda3{{ else }}miniconda3{{ end }}/etc/profile.d/conda.sh" ]; then
        . "{{ .chezmoi.homeDir }}/{{ if (eq .chezmoi.os "darwin") }}opt/anaconda3{{ else }}miniconda3{{ end }}/etc/profile.d/conda.sh"
    else
        export PATH="{{ .chezmoi.homeDir }}/{{ if (eq .chezmoi.os "darwin") }}opt/anaconda3{{ else }}miniconda3{{ end }}/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# >>> Node Version Manager >>>
# NVM - A Node Version Manager
export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# <<< Node Version Manager <<<

# >>> SDKMAN >>>
# SDKMAN - A Java and Scala SDK manager
# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="{{ .chezmoi.homeDir }}/.sdkman"
[[ -s "{{ .chezmoi.homeDir }}/.sdkman/bin/sdkman-init.sh" ]] && source "{{ .chezmoi.homeDir }}/.sdkman/bin/sdkman-init.sh"
# <<< SDKMAN <<<

{{ if (eq .chezmoi.os "darwin") }}
# >>> ITERM2 >>>
	test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
# <<< ITERM2 <<<
{{ end }}

# >>> WSL
if $(uname -a | grep -qPe "(M|m)icrosoft"); then
	if [ -f "$HOME/.op-ssh-agent.sh" ]; then
			source $HOME/.op-ssh-agent.sh
	fi
fi
# <<< WSL
